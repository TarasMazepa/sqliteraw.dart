name: sqlite-build.yml

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  SQLITE_COMPILE_TIME_OPTIONS: >-
    -O3
    -DSQLITE_ENABLE_FTS4
    -DSQLITE_ENABLE_FTS5
    -DSQLITE_ENABLE_RTREE
    -DSQLITE_ENABLE_GEOPOLY

jobs:
  sqlite-build-ubuntu-24-04-arm:
    runs-on: ubuntu-24.04-arm

    steps:
      - uses: actions/checkout@v4

      - run: |
          sudo apt-get update
          sudo apt-get install -y clang

      - run: |
          clang -fPIC -shared \
            ${{ env.SQLITE_COMPILE_TIME_OPTIONS }} \
            sqlite/sqlite3.c \
            -lpthread -ldl -lm \
            -o "sqlite3.so"
          
          clang \
            ${{ env.SQLITE_COMPILE_TIME_OPTIONS }} \
            sqlite/sqlite3.c sqlite/shell.c \
            -lpthread -ldl -lm \
            -o "sqlite3"
          
          ./sqlite3 --version

      - uses: dart-lang/setup-dart@v1

      - run: |
          mkdir -p sample/dart/assets
          cp sqlite3.so sample/dart/assets/libsqlite3.so

      - run: |
          cd sample/dart
          dart pub get
          dart test

  sqlite-build-ubuntu-latest:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - run: |
          sudo apt-get update
          sudo apt-get install -y clang

      - run: |
          clang -fPIC -shared \
            ${{ env.SQLITE_COMPILE_TIME_OPTIONS }} \
            sqlite/sqlite3.c \
            -lpthread -ldl -lm \
            -o "sqlite3.so"
          
          clang \
            ${{ env.SQLITE_COMPILE_TIME_OPTIONS }} \
            sqlite/sqlite3.c sqlite/shell.c \
            -lpthread -ldl -lm \
            -o "sqlite3"
          
          ./sqlite3 --version

      - uses: dart-lang/setup-dart@v1

      - run: |
          mkdir -p sample/dart/assets
          cp sqlite3.so sample/dart/assets/libsqlite3.so

      - run: |
          cd sample/dart
          dart pub get
          dart test

  sqlite-build-macos-latest:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - run: |
          clang -dynamiclib \
            ${{ env.SQLITE_COMPILE_TIME_OPTIONS }} \
            sqlite/sqlite3.c \
            -lm -lpthread \
            -o "sqlite3.dylib"
          
          clang \
            ${{ env.SQLITE_COMPILE_TIME_OPTIONS }} \
            sqlite/sqlite3.c sqlite/shell.c \
            -lm -lpthread \
            -o "sqlite3"
          
          ./sqlite3 --version

      - uses: dart-lang/setup-dart@v1

      - run: |
          mkdir -p sample/dart/assets
          cp sqlite3.dylib sample/dart/assets/libsqlite3.dylib

      - run: |
          cd sample/dart
          dart pub get
          dart test

  sqlite-build-macos-13:
    runs-on: macos-13

    steps:
      - uses: actions/checkout@v4

      - run: |
          clang -dynamiclib \
            ${{ env.SQLITE_COMPILE_TIME_OPTIONS }} \
            sqlite/sqlite3.c \
            -lm -lpthread \
            -o "sqlite3.dylib"
          
          clang \
            ${{ env.SQLITE_COMPILE_TIME_OPTIONS }} \
            sqlite/sqlite3.c sqlite/shell.c \
            -lm -lpthread \
            -o "sqlite3"
          
          ./sqlite3 --version

      - uses: dart-lang/setup-dart@v1

      - run: |
          mkdir -p sample/dart/assets
          cp sqlite3.dylib sample/dart/assets/libsqlite3.dylib

      - run: |
          cd sample/dart
          dart pub get
          dart test

  sqlite-build-windows-11-arm:
    runs-on: windows-11-arm

    steps:
      - uses: actions/checkout@v4

      - run: |
          clang -shared \
            -DSQLITE_API=__declspec\(dllexport\) \
            ${{ env.SQLITE_COMPILE_TIME_OPTIONS }} \
            sqlite/sqlite3.c \
            -o "sqlite3.dll"
          
          clang \
            ${{ env.SQLITE_COMPILE_TIME_OPTIONS }} \
            sqlite/sqlite3.c sqlite/shell.c \
            -o "sqlite3.exe"
          
          ./sqlite3 --version
        shell: bash

      - uses: dart-lang/setup-dart@v1

      - run: |
          mkdir -p sample/dart/assets
          cp sqlite3.dll sample/dart/assets/sqlite3.dll
        shell: bash

      - run: |
          cd sample/dart
          dart pub get
          dart test
        shell: bash

  sqlite-build-windows-latest:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - run: |
          clang -shared \
            -DSQLITE_API=__declspec\(dllexport\) \
            ${{ env.SQLITE_COMPILE_TIME_OPTIONS }} \
            sqlite/sqlite3.c \
            -o "sqlite3.dll"
          
          clang \
            ${{ env.SQLITE_COMPILE_TIME_OPTIONS }} \
            sqlite/sqlite3.c sqlite/shell.c \
            -o "sqlite3.exe"
          
          ./sqlite3 --version
        shell: bash

      - uses: dart-lang/setup-dart@v1

      - run: |
          mkdir -p sample/dart/assets
          cp sqlite3.dll sample/dart/assets/sqlite3.dll
        shell: bash

      - run: |
          cd sample/dart
          dart pub get
          dart test
        shell: bash
